name: Check Branches
on:
  pull_request:
    branches:
      - "dvp"
      - "release/rls*"

jobs:
  Checking-Branch-Rules:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Check Branch Names
        run: |
          echo "Your target branch is "${{github.base_ref}}", applying rules for branch ${{github.head_ref}}, Wait..."
          if [[ "${{github.base_ref}}" =~ "dvp" && ! "${{github.head_ref}}" =~ ^(feat|fix)\/]];
          then echo "ERROR: Branch name must start with 'feat/', 'fix/', rls#.#/feat or rls#.#/fix" --> Exiting..."
          exit 1
          
          if [[ "${{github.base_ref}}" =~ "release/rls*" ]];
          if [[ ! "${{github.head_ref}}" =~ ^(rls[0-9]+\.[0-9]+)\/]];
          then echo "ERROR: Branch name must start with 'feat/', 'fix/', rls#.#/feat or rls#.#/fix" --> Exiting..."
          exit 1
          fi
        #(rls[0-9]+\.[0-9]+)\/

  Linting-Codes:
    runs-on: ubuntu-latest
    needs: [Checking-Branch-Rules]
    permissions:
      contents: read
      packages: read
      # To report GitHub Actions status checks
      statuses: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # super-linter needs the full git history to get the
          # list of files that changed across commits
          fetch-depth: 0

      - name: Super-linter
        uses: super-linter/super-linter@v6.3.0 # x-release-please-version
        env:
          # To report GitHub Actions status checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  Release-Package:
    if: ${{github.event.pull_request.base.ref == 'release/rls*'}}
    runs-on: ubuntu-latest
    needs: [Linting-Codes]
    steps:
      - name: Check Branch Prefix
        run: |
          echo 'hi'
      #   DEST_BRANCH=$(echo "${{ github.ref }}" | cut -d '/' -f 2) if [[ "$DEST_BRANCH" =~ ^rls[0-9]+\.0$ ]]; then echo "Branch starts with 'rls' followed by an integer. Proceeding to deploy." else echo "Branch does not meet deploy criteria. Skipping deployment." exit 0 fi
      - name: Upload to npm registry
        run: |
          # Your deployment script or commands here

  Sending-Mail-After-Succeeded:
    runs-on: ubuntu-latest
    needs: [Linting-Codes]
    steps:
      - name: Send Email Notification
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "Branch Push Notification"
          body: "A push has been made to branch ${{ github.ref }} by ${{ github.actor }}."
          to: ${{ github.actor }}
          from: "your-email@gmail.com"

  Sending-Mail-After-Released:
    runs-on: ubuntu-latest
    needs: [Release-Package]
    steps:
      - name: Send Email Notification For release
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "New version is released - Branch Push Notification"
          body: "A push has been made to branch ${{ github.ref }} by ${{ github.actor }}."
          to: ${{ github.actor }}
          from: "your-email@gmail.com"
